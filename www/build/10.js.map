{"version":3,"sources":["../../src/pages/email-change/email-change.module.ts","../../src/validators/email.validator.ts","../../src/pages/email-change/email-change.ts"],"names":[],"mappings":"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","file":"10.js","sourcesContent":["/**\n * @author    Ionic Bucket <ionicbucket@gmail.com>\n * @copyright Copyright (c) 2017\n * @license   Fulcrumy\n * \n * This file represents module of Email Change Page\n */\n\nimport { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { EmailChangePage } from './email-change';\n\n@NgModule({\n  declarations: [\n    EmailChangePage,\n  ],\n  imports: [\n    IonicPageModule.forChild(EmailChangePage),\n  ],\n  exports: [\n    EmailChangePage\n  ]\n})\nexport class EmailChangePageModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/email-change/email-change.module.ts","/**\n * @author    Ionic Bucket <ionicbucket@gmail.com>\n * @copyright Copyright (c) 2017\n * @license   Fulcrumy\n * \n * This file represents a validation of Email Address\n * File path - '../../../src/validators/email.validator'\n */\n\nimport { FormControl } from '@angular/forms';\n\nexport class EmailValidator {\n\n  static isValid(control: FormControl) {\n    const re = /^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/.test(control.value);\n\n    if (re) { return null; }\n    return { \"invalidEmail\": true };\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/validators/email.validator.ts","/**\n * @author    Ionic Bucket <ionicbucket@gmail.com>\n * @copyright Copyright (c) 2017\n * @license   Fulcrumy\n * \n * This file represents a component of change user email \n * File path - '../../../src/pages/email-change/email-change'\n */\n\nimport { Component } from '@angular/core';\nimport { IonicPage, ViewController } from 'ionic-angular';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { EmailValidator } from '../../validators/email.validator';\nimport { UtilsProvider } from '../../providers/utils/utils';\nimport { AuthenticationProvider } from '../../providers/authentication/authentication';\n\n@IonicPage()\n@Component({\n  selector: 'page-email-change',\n  templateUrl: 'email-change.html',\n})\nexport class EmailChangePage {\n\n  private emailForm: any;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private utilsProvider: UtilsProvider,\n    private viewCtrl: ViewController,\n    private authProvider: AuthenticationProvider) { }\n\n  /**\n   * Do any initialization\n   */\n  ngOnInit() {\n    this.formValidation();\n  }\n\n  /***\n   * --------------------------------------------------------------\n   * Form Validation\n   * --------------------------------------------------------------\n   * @method formValidation\n   * This function build form of email change with validation\n   * Creating three input fields in this form\n   * 1. currentEmail    - User Current Email Address\n   * 2. password        - User Current Password\n   * 3. newEmail        - User New Email Address\n   */\n  formValidation() {\n    this.emailForm = this.formBuilder.group(\n      {\n        currentEmail: ['', Validators.compose([Validators.required, EmailValidator.isValid])],\n        password: ['', Validators.compose([Validators.required])],\n        newEmail: ['', Validators.compose([Validators.required, EmailValidator.isValid])]\n      }\n    );\n  }\n\n  /**\n   * --------------------------------------------------------------\n   * Update Email Address\n   * --------------------------------------------------------------\n   * @method updateEmail\n   * \n   * This function call a authentication provider `updateEmail` by passing three params to update\n   * user email address.\n   */\n  async updateEmail() {\n    try {\n      this.utilsProvider.presentLoading(); // Start loading\n      await this.authProvider.updateEmail(this.emailForm.currentEmail, this.emailForm.password, this.emailForm.newEmail)\n        .then((res) => {\n          this.utilsProvider.hideLoading(); // Hide loading\n          this.utilsProvider.basicAlert('Success', 'Your Email Address Change Successfully').then(() => {\n            this.viewCtrl.dismiss();\n          });\n        }, err => {\n          this.utilsProvider.hideLoading(); // Hide loading\n          this.utilsProvider.basicAlert('Error', err.message);\n        });\n    }\n    catch (err) {\n      this.utilsProvider.hideLoading(); // Hide loading\n      this.utilsProvider.basicAlert('Error', err);\n    }\n  }\n\n  /**\n   * --------------------------------------------------------------\n   * Dismiss\n   * --------------------------------------------------------------\n   * @method dismiss    This function dismiss the open popup modal\n   */\n  dismiss() {\n    this.viewCtrl.dismiss();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/email-change/email-change.ts"],"sourceRoot":""}