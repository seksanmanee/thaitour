{"version":3,"sources":["../../src/pages/post/post.module.ts","../../src/pages/post/post.ts"],"names":[],"mappings":"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","file":"14.js","sourcesContent":["/**\n * @author    Ionic Bucket <ionicbucket@gmail.com>\n * @copyright Copyright (c) 2017\n * @license   Fulcrumy\n * \n * This file represents module of post page\n */\n\nimport { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { PostPage } from './post';\n\n@NgModule({\n  declarations: [\n    PostPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(PostPage)\n  ],\n  exports: [\n    PostPage\n  ]\n})\nexport class PostPageModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/post/post.module.ts","/**\n * @author    Ionic Bucket <ionicbucket@gmail.com>\n * @copyright Copyright (c) 2017\n * @license   Fulcrumy\n * \n * This file represents a component of post page\n * File path - '../../../src/pages/post/post'\n */\n\nimport { Component } from '@angular/core';\nimport { IonicPage, NavParams, ViewController } from 'ionic-angular';\nimport { LocalStorageUserData } from '../../models/localstorage'; // localstorage data Model\nimport { Post } from '../../models/post'; // Post Model\nimport { UtilsProvider } from '../../providers/utils/utils'; // Utils provider\nimport { PostProvider } from '../../providers/post/post'; // Post Provider\nimport { ImageProvider } from '../../providers/image/image'; // Image Provider\nimport { StorageProvider } from '../../providers/utils/storage'; // Storage Provider\n\n@IonicPage()\n@Component({\n  selector: 'page-post',\n  templateUrl: 'post.html',\n})\nexport class PostPage {\n\n  private userObj: any = {} as LocalStorageUserData;\n  private postModel = {} as Post;\n\n  constructor(\n    public navParams: NavParams,\n    public viewCtrl: ViewController,\n    private storageProvider: StorageProvider,\n    private postProvider: PostProvider,\n    private imageProvider: ImageProvider,\n    private utilsProvider: UtilsProvider) { }\n\n\n  /**\n   * Do any initialization\n   */\n  ngOnInit() {\n    this.getPostInformation();\n    this.loadStorageData();\n  }\n\n  /**\n   * --------------------------------------------------------------\n   * Get localstorage user data\n   * --------------------------------------------------------------\n   * \n   * @method loadStorageData This function get userId from localstorage\n   */\n  loadStorageData() {\n    this.storageProvider.get().then((success: any) => {\n      this.userObj = success;\n    });\n  }\n\n  /**\n   * --------------------------------------------------------------\n   * Get & Set Post data from navParams\n   * --------------------------------------------------------------\n   */\n  getPostInformation() {\n    // Get post information from navParams\n    if (this.navParams.get('postInfo')) {\n      this.postModel = this.navParams.get('postInfo');\n    }\n  }\n\n  /**\n   * --------------------------------------------------------------\n   * Create a New Post\n   * --------------------------------------------------------------\n   * @method newPost\n   */\n  async newPost() {\n\n    // Define new post data's\n    this.postModel.userImage = this.userObj.image;\n    this.postModel.userName = this.userObj.name;\n    this.postModel.uid = this.userObj.userId;\n    this.postModel.isLike = false;\n    this.postModel.status = true;\n    this.postModel.createdDate = new Date();\n\n    try {\n      // Present a loading\n      this.utilsProvider.presentLoading();\n\n      // Call a post provider to create a new post\n      await this.postProvider\n        .createPost(this.postModel)\n        .then(success => {\n          this.utilsProvider.presentToast('Your post successfully published!', 3000, 'top');\n          this.viewCtrl.dismiss({ success: true });\n          this.postModel.featureImage = '';\n          this.postModel.text = '';\n          this.utilsProvider.hideLoading();\n        })\n        .catch(err => {\n          this.utilsProvider.hideLoading();\n        });\n    }\n    catch (err) {\n      this.utilsProvider.hideLoading();\n    }\n  }\n\n  /**\n   * --------------------------------------------------------------\n   * Update Post\n   * --------------------------------------------------------------\n   * \n   * @method updatePost   This function updates post in the database\n   */\n  async updatePost() {\n    this.postModel.updatedDate = new Date();\n    try {\n      // Present a loading\n      this.utilsProvider.presentLoading();\n\n      // Call a post provider to update a post\n      await this.postProvider\n        .updatePost(this.postModel)\n        .then(success => {\n          this.postModel.featureImage = '';\n          this.postModel.text = '';\n          this.utilsProvider.hideLoading();\n          this.utilsProvider.presentToast('Your post successfully updated!', 3000, 'top');\n          this.viewCtrl.dismiss({ success: true });\n        })\n        .catch(err => {\n          this.utilsProvider.hideLoading();\n        });\n    }\n    catch (err) {\n      this.utilsProvider.hideLoading();\n    }\n  }\n\n  /**\n   * --------------------------------------------------------------\n   * Open Camera Gallery\n   * --------------------------------------------------------------\n   * @method openCameraGallery\n   * \n   * This function call `this.imageProvider.openGallery` method by passing user id and\n   * request type. And the returning value will be assign by `this.postModel.featureImage`\n   * as a featured image of the post.\n   */\n  openCameraGallery() {\n    try {\n      this.imageProvider\n        .openGallery(this.userObj.userId, 'post')\n        .then((success: any) => {\n          this.postModel.featureImage = success;\n          this.utilsProvider.hideLoading();\n        }).catch(err => {\n          this.utilsProvider.hideLoading();\n        });\n    }\n    catch (err) {\n      console.log(err)\n    }\n  }\n\n  /**\n   * --------------------------------------------------------------\n   * Open Camera\n   * --------------------------------------------------------------\n   * @method openCamera\n   * \n   * This function call `this.imageProvider.openCamera` method by passing user id and\n   * request type. And the returning value will be assign by `this.postModel.featureImage`\n   * as a featured image of the post.\n   */\n  openCamera() {\n    try {\n      this.imageProvider\n        .openCamera(this.userObj.userId, 'post')\n        .then((success: any) => {\n          this.postModel.featureImage = success;\n          this.utilsProvider.hideLoading();\n        }).catch((err: any) => {\n          this.utilsProvider.hideLoading();\n        });\n    }\n    catch (err) {\n      console.log(err)\n    }\n  }\n\n  /**\n   * Close the current view page\n   */\n  dismiss() {\n    this.viewCtrl.dismiss({ success: false });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/post/post.ts"],"sourceRoot":""}