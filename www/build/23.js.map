{"version":3,"sources":["../../src/pages/discover-people/discover-people.module.ts","../../src/pages/discover-people/discover-people.ts"],"names":[],"mappings":"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","file":"23.js","sourcesContent":["/**\n * @author    Ionic Bucket <ionicbucket@gmail.com>\n * @copyright Copyright (c) 2017\n * @license   Fulcrumy\n * \n * This file represents module of discover people\n */\n\nimport { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { DiscoverPeoplePage } from './discover-people';\n\n@NgModule({\n  declarations: [\n    DiscoverPeoplePage,\n  ],\n  imports: [\n    IonicPageModule.forChild(DiscoverPeoplePage),\n  ],\n  exports: [\n    DiscoverPeoplePage\n  ]\n})\nexport class DiscoverPeoplePageModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/discover-people/discover-people.module.ts","/**\n * @author    Ionic Bucket <ionicbucket@gmail.com>\n * @copyright Copyright (c) 2017\n * @license   Fulcrumy\n * \n * This file represents a component of discover people\n * File path - '../../../src/pages/discover-people/discover-people'\n */\n\nimport { Component } from '@angular/core';\nimport { IonicPage, ViewController, ModalController } from 'ionic-angular';\nimport { FriendsProvider } from '../../providers/friends/friends';\nimport { ConnectionsProvider } from '../../providers/connections/connections';\nimport { StorageProvider } from '../../providers/utils/storage';\n\n@IonicPage()\n@Component({\n  selector: 'page-discover-people',\n  templateUrl: 'discover-people.html',\n})\nexport class DiscoverPeoplePage {\n\n  suggestedUsers: any = []; // List of Suggested Users\n  currentUserId: any; // Current User ID\n\n  constructor(\n    private viewCtrl: ViewController,\n    private friendsProvider: FriendsProvider,\n    private storageProvider: StorageProvider,\n    private connectionsProvider: ConnectionsProvider,\n    public modalCtrl: ModalController) { }\n\n  /***\n   * --------------------------------------------------------------\n   * Lifecycle Event - ionViewDidEnter()\n   * --------------------------------------------------------------\n   * \n   * Fired when entering a page, after it becomes the active page.\n   */\n  ionViewDidEnter() {\n    this.loadStorageData().then(() => {\n      this.getSuggestedUsers();\n    });\n  }\n\n  /**\n   * --------------------------------------------------------------\n   * Get Localstorage User Data\n   * --------------------------------------------------------------\n   * \n   * @method loadStorageData This function get userId from localstorage\n   */\n  async loadStorageData() {\n    await this.storageProvider.get().then((success: any) => {\n      this.currentUserId = success.userId;\n    });\n  }\n\n  /**\n   * --------------------------------------------------------------\n   * Suggested Users\n   * --------------------------------------------------------------\n   * @method getSuggestedUsers\n   * \n   * This function load suggested users by calling connection provider\n   * `getDiscoverPeoples` method.\n   */\n  async getSuggestedUsers() {\n    try {\n      this.connectionsProvider.getDiscoverPeoples(this.currentUserId)\n        .then(data => {\n          this.suggestedUsers = data;\n        }).catch(error => {\n          console.log(error);\n        });\n    }\n    catch (err) {\n      console.log(err);\n    }\n  }\n\n  /**\n   * --------------------------------------------------------------\n   * Follow User\n   * --------------------------------------------------------------\n   * @method follow\n   * This function works to follow user and call a connection provider `followUser` method by passing\n   * two params `targetUserId` and `this.currentUserId`. here, `targetUserId` is any user ID would like to\n   * follow and `this.currentUserId` is current user ID.\n   * \n   * @param targetUserId  Selecte User ID\n   * @param index Selected Array Index Number\n   */\n  async followUser(targetUserId, index) {\n    try {\n      this.connectionsProvider.followUser(targetUserId, this.currentUserId).then(success => {\n        success.subscribe(() => {\n          this.suggestedUsers.splice(index, 1);\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n    catch (err) {\n      console.log(err);\n    }\n  }\n\n  /**\n   * --------------------------------------------------------------\n   * Send Friend Request\n   * --------------------------------------------------------------\n   * @method sendFriendRequest\n   * This function is used to send Friend Requests. Call a friends provider `addFriendRequest` method by\n   * two params `this.currentUserId` and `receiverId` here, `receiverId` is any user ID would like to\n   * send friend request and `this.currentUserId` is current user ID.\n   * \n   * @param receiverId Whom I want to send friend request\n   * @param index Selected Array Index Number\n   */\n  async sendFriendRequest(receiverId, index) {\n    try {\n      await this.friendsProvider.addFriendRequest(this.currentUserId, receiverId)\n        .then(success => {\n          if (success) {\n            this.suggestedUsers.splice(index, 1);\n          }\n        });\n    }\n    catch (err) {\n      console.log(err);\n    }\n  }\n\n  /**\n   * --------------------------------------------------------------\n   * Ionic Refresher\n   * --------------------------------------------------------------\n   * \n   * @method doRefresh The Refresher provides pull-to-refresh\n   * functionality on a content component.\n   */\n  async doRefresh(event) {\n    this.getSuggestedUsers().then(() => {\n      event.complete();\n    });\n  }\n\n  /**\n   * --------------------------------------------------------------\n   * Open Particular User Profile\n   * --------------------------------------------------------------\n   * @method gotoUserProfile\n   * \n   * This function create a modal to open particular user public profile.\n   * \n   * @param userId\n   */\n  gotoUserProfile(userId) {\n    let modal = this.modalCtrl.create('UserPublicProfilePage', { userId: userId });\n    modal.present();\n  }\n\n  /**\n   * Dismiss function\n   * This function dismiss the popup modal\n   */\n  dismiss() {\n    this.viewCtrl.dismiss();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/discover-people/discover-people.ts"],"sourceRoot":""}