{"version":3,"sources":["../../src/pages/friends-location-map/friends-location-map.module.ts","../../src/pages/friends-location-map/friends-location-map.ts"],"names":[],"mappings":"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","file":"17.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { FriendsLocationMapPage } from './friends-location-map';\n\n@NgModule({\n  declarations: [\n    FriendsLocationMapPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(FriendsLocationMapPage),\n  ],\n})\nexport class FriendsLocationMapPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/friends-location-map/friends-location-map.module.ts","/**\n * @author    Ionic Bucket <ionicbucket@gmail.com>\n * @copyright Copyright (c) 2017\n * @license   Fulcrumy\n * \n * This file represents a component of Friends Location Map\n * File path - '../../../src/pages/friends-location-map/friends-location-map'\n */\n\nimport { Component, ElementRef, ViewChild } from '@angular/core';\nimport { IonicPage, NavController, NavParams, ModalController } from 'ionic-angular';\nimport { UtilsProvider } from '../../providers/utils/utils';\nimport { StorageProvider } from '../../providers/utils/storage';\nimport { SharedProvider } from '../../providers/shared/shared';\nimport { FriendsLocationMapProvider } from '../../providers/friends-location-map/friends-location-map';\ndeclare var google: any;\n\n@IonicPage()\n@Component({\n  selector: 'page-friends-location-map',\n  templateUrl: 'friends-location-map.html',\n})\nexport class FriendsLocationMapPage {\n\n  /**\n   * Contains Map Elements\n   */\n  map: any;\n\n  /**\n   * Current User ID\n   */\n  _userId: any;\n\n  /**\n   * Current User Informations\n   */\n  _userInfo: any;\n\n  /**\n   * Current User Location Status\n   */\n  _isShareLocation: Boolean;\n\n  /**\n   * User Location Latitude and Longitude\n   */\n  _latLng: any;\n\n  /**\n   * Array of User Friends Location\n   */\n  _friendsLocation: any = [];\n\n  /**\n   * Map Options\n   */\n  mapOptions: any;\n\n  /**\n   * --------------------------------------------------------------\n   * Map Direction Status\n   * --------------------------------------------------------------\n   * @Bolean\n   * \n   * It will say that the map is directional or not. If `showDirectionDetails` status is true\n   * then map show the direction of two user's location otherwise all friends location will be shown\n   * inside the map. By default status will be false.\n   * \n   */\n  showDirectionDetails: Boolean = false;\n\n  /**\n   * Map Element\n   */\n  @ViewChild('map') mapElement: ElementRef;\n\n  /**\n   * Direction Routes Element\n   */\n  @ViewChild('directionsRoutes') directionsRoutes: ElementRef;\n\n  constructor(public navCtrl: NavController,\n    public navParams: NavParams,\n    private modalCtrl: ModalController,\n    private utilsProvider: UtilsProvider,\n    private storageProvider: StorageProvider,\n    private sharedProvider: SharedProvider,\n    private friendsLocationMapProvider: FriendsLocationMapProvider) {\n  }\n\n  /** Do Any Initialization */\n  ngOnInit() {\n    this.loadStorageData().then(() => {\n      this.getUserInfos().then(() => {\n        this.initMap();\n      })\n    })\n  }\n\n  /**\n   * --------------------------------------------------------------\n   * Get Localstorage User Data\n   * --------------------------------------------------------------\n   * \n   * @method loadStorageData This function get current user information from localstorage\n   */\n  async loadStorageData() {\n    await this.storageProvider.get().then((success: any) => {\n      this._userId = success.userId;\n      this._userInfo = success;\n    });\n  }\n\n  /**\n   * --------------------------------------------------------------\n   * Get User Information\n   * --------------------------------------------------------------\n   * @method getUserInfos\n   * this function retrieve current user location data by calling shared provider\n   * `getUserInfoByUserId()` method by user ID.\n   */\n  async getUserInfos() {\n    await this.sharedProvider.getUserInfoByUserId(this._userId).then((data: any) => {\n      if (data.location) {\n        this._latLng = {\n          latitude: data.location.latitude,\n          longitude: data.location.longitude,\n          address: data.location.address\n        };\n      }\n      this._isShareLocation = data.isShareLocation;\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  /**\n   * --------------------------------------------------------------\n   * Get Friend Location\n   * --------------------------------------------------------------\n   * This function retrieve current user friends location by current user userId and latlng.\n   * and the return value assign with - `this._friendsLocation`.\n   */\n  async getFriendsLocation() {\n    await this.friendsLocationMapProvider.getFriendsLocation(this._userId, this._latLng)\n      .then((data) => {\n        this._friendsLocation = data;\n      }).catch(err => {\n        console.log(err);\n      })\n  }\n\n  /**\n   * --------------------------------------------------------------\n   * Init Map\n   * --------------------------------------------------------------\n   * @method initMap\n   * This function check current user location point is exist or not. If location is not exist\n   * then retrieve user current location information otherwise call friend location data with user map.\n   */\n  initMap() {\n    if (!this._latLng) {\n      this.friendsLocationMapProvider.getCurrentLocation().subscribe((data: any) => {\n        if (data) {\n          this._latLng = {\n            latitude: data.latitude,\n            longitude: data.longitude,\n            address: data.address\n          };\n          this.getFriendsLocation().then(() => {\n            this.loadMap();\n          });\n        }\n      });\n    } else {\n      this.getFriendsLocation().then(() => {\n        this.loadMap();\n      });\n    }\n  }\n\n  /**\n   * --------------------------------------------------------------\n   * Load Map\n   * --------------------------------------------------------------\n   * @method loadMap\n   */\n  loadMap() {\n    this.mapOptions = {\n      center: new google.maps.LatLng(this._latLng.latitude, this._latLng.longitude),\n      zoom: 8,\n      duration: 5000,\n      mapTypeControl: true,\n      mapTypeControlOptions: {\n        style: google.maps.MapTypeControlStyle.DROPDOWN_MENU\n      },\n      navigationControl: true,\n      bearing: 50,\n      mapTypeId: google.maps.MapTypeId.ROADMAP\n    }\n    this.map = new google.maps.Map(this.mapElement.nativeElement, this.mapOptions);\n    this.createMarker();\n  }\n\n  /**\n   * --------------------------------------------------------------\n   * Marker Create\n   * --------------------------------------------------------------\n   * @method createMarker\n   * Function for adding a marker to the page.\n   */\n  createMarker() {\n    // Current User Infos\n    this._userInfo = {\n      uid: this._userId,\n      latitude: this._latLng.latitude,\n      longitude: this._latLng.longitude,\n      address: this._latLng.address,\n      distance: 0.0,\n      userImage: this._userInfo.image,\n      userName: this._userInfo.name + \" (It's You)\"\n    }\n\n    // Add current user data in array of friends location\n    this._friendsLocation.push(this._userInfo);\n\n    if (this._friendsLocation) {\n      for (let i = 0; i < this._friendsLocation.length; i++) {\n        let marker = new google.maps.Marker({\n          map: this.map,\n          animation: google.maps.Animation.DROP,\n          position: new google.maps.LatLng(this._friendsLocation[i].latitude, this._friendsLocation[i].longitude),\n          icon: {\n            url: this._friendsLocation[i].userImage,\n            scaledSize: new google.maps.Size(40, 40)\n          }\n        });\n        this.addInfoWindow(marker, this._friendsLocation[i]);\n      }\n    }\n  }\n\n  /**\n   * --------------------------------------------------------------\n   * Info Window\n   * --------------------------------------------------------------\n   * @method addInfoWindow\n   * When the user clicks the marker, an info window opens.\n   * \n   * @param marker\n   * @param locationInfo    Current User Location Infos\n   */\n  addInfoWindow(marker, locationInfo) {\n    let buttons = [];\n\n    if (locationInfo.uid === this._userId) {\n      buttons = [];\n    } else {\n      buttons = [\n        { text: 'Chat' },\n        { text: 'Direction' }\n      ];\n    }\n\n    google.maps.event.addListener(marker, 'click', () => {\n      this.utilsProvider.mapInfoWindow(`<img src=\"${locationInfo.userImage}\"> <br/> <b>${locationInfo.userName}</b>`,\n        `<b>Address: </b> ${locationInfo.address} <br/>\n        <b>Distance: </b> ${locationInfo.distance}`, buttons\n      ).then((res) => {\n        if (res === 'Chat') {\n          this.modalCtrl.create('ChatPage', { userId: locationInfo.uid }).present();\n        } else if (res === 'Direction') {\n          this.showDirection(locationInfo);\n        }\n      })\n    });\n  }\n\n  /**\n   * --------------------------------------------------------------\n   * Direction Between Two User Location\n   * --------------------------------------------------------------\n   * @method showDirection\n   * @param location    Target User Location\n   */\n  showDirection(location) {\n    this.showDirectionDetails = true;\n    let origin = { lat: this._userInfo.latitude, lng: this._userInfo.longitude };\n    let destination = { lat: location.latitude, lng: location.longitude };\n    let directionsService = new google.maps.DirectionsService;\n    let directionsDisplay = new google.maps.DirectionsRenderer;\n    directionsDisplay.setMap(this.map);\n\n    directionsService.route({\n      origin: origin,\n      destination: destination,\n      travelMode: google.maps.TravelMode['DRIVING']\n    }, (res, status) => {\n      if (status == google.maps.DirectionsStatus.OK) {\n        directionsDisplay.setDirections(res);\n        directionsDisplay.setPanel(this.directionsRoutes.nativeElement);\n      } else {\n        console.warn(status);\n      }\n    });\n  }\n\n  /**\n   * --------------------------------------------------------------\n   * Refresh Map\n   * --------------------------------------------------------------\n   * @method refreshMap\n   */\n  refreshPage() {\n    this.navCtrl.setRoot('FriendsLocationMapPage');\n  }\n\n  /** \n   * --------------------------------------------------------------\n   * Open List of Friends Location Page\n   * --------------------------------------------------------------\n   */\n  gotoFriendsLocationList() {\n    const modal = this.modalCtrl.create('FriendsLocationListPage', { friendList: this._friendsLocation });\n    // When close the modal\n    modal.onDidDismiss(data => {\n      if (data) {\n        this.showDirection(data);\n      }\n    });\n    modal.present(); // Present modal\n  }\n\n  /**\n   * --------------------------------------------------------------\n   * Update User Share Location\n   * --------------------------------------------------------------\n   * @method updateShareLocation\n   * \n   * Onclick this function open front of user a confirm popup box, after click 'yes' option\n   * this call a location provider method `updateShareLocation` by pass user current ID and\n   * current status of `this.isShareLocation`.\n   */\n  updateShareLocation() {\n\n    // Dynamic confirm popup box data\n    let obj = {\n      title: 'Location Status',\n      message: `Are you sure? Do you want to make your location ${this._isShareLocation === true ? 'Private' : 'Public'}?`\n    }\n\n    // Open a confirm box by calling utils provider\n    this.utilsProvider.showConfirm(obj.title, obj.message).then((data) => {\n      // If user press `yes`\n      if (data === 'yes') {\n        // reversed `this._isShareLocation` option value\n        this._isShareLocation = !this._isShareLocation;\n\n        // Call location provider method `updateShareLocation` by userId and _isShareLocation \n        this.friendsLocationMapProvider.updateShareLocation(this._userId, this._isShareLocation)\n          .then((success) => {\n            this.utilsProvider.presentToast('Your location has been changed successfully.', 3000, 'top');\n          }).catch(error => {\n            this.utilsProvider.presentToast('Sorry! Failed to change the location.', 3000, 'top');\n          });\n      }\n    }).catch(err => {\n      console.log(err);\n    })\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/friends-location-map/friends-location-map.ts"],"sourceRoot":""}