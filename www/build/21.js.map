{"version":3,"sources":["../../src/pages/followers/followers.module.ts","../../src/pages/followers/followers.ts"],"names":[],"mappings":"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","file":"21.js","sourcesContent":["/**\n * @author    Ionic Bucket <ionicbucket@gmail.com>\n * @copyright Copyright (c) 2017\n * @license   Fulcrumy\n * \n * This file represents module of followers page\n */\nimport { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { FollowersPage } from './followers';\n\n@NgModule({\n  declarations: [\n    FollowersPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(FollowersPage),\n  ],\n  exports: [\n    FollowersPage\n  ]\n})\nexport class FollowersPageModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/followers/followers.module.ts","/**\n * @author    Ionic Bucket <ionicbucket@gmail.com>\n * @copyright Copyright (c) 2017\n * @license   Fulcrumy\n * \n * This file represents a component of followers page\n * File path - '../../../src/pages/followers/followers'\n */\n\nimport { Component } from '@angular/core';\nimport { IonicPage, NavParams, ViewController, ModalController } from 'ionic-angular';\nimport { ConnectionsProvider } from '../../providers/connections/connections';\nimport { UtilsProvider } from '../../providers/utils/utils';\nimport { SharedProvider } from '../../providers/shared/shared';\n\n@IonicPage()\n@Component({\n  selector: 'page-followers',\n  templateUrl: 'followers.html',\n})\nexport class FollowersPage {\n\n  followersList: any = []; // Array of followers list\n  newFollowersList: any = []; // Array of new followers list\n  userId: any; // User Id\n\n  constructor(\n    public navParams: NavParams,\n    private viewCtrl: ViewController,\n    private connectionsProvider: ConnectionsProvider,\n    private utilsProvider: UtilsProvider,\n    private sharedProvider: SharedProvider,\n    public modalCtrl: ModalController) { }\n\n  /***\n   * --------------------------------------------------------------\n   * Lifecycle Event - ionViewDidLoad()\n   * --------------------------------------------------------------\n   * \n   * Fired when the page has loaded\n   */\n  ionViewDidLoad() {\n    this.getNavParamsData().then(() => {\n      this.getFollowersUser();\n    });\n  }\n\n  /**\n   * --------------------------------------------------------------\n   * Get & Set data from navParams\n   * --------------------------------------------------------------\n   */\n  async getNavParamsData() {\n    if (this.navParams.get('userId')) {\n      this.userId = this.navParams.get('userId');\n    }\n  }\n\n  /**\n   * --------------------------------------------------------------\n   * List of Followers\n   * --------------------------------------------------------------\n   * @method getFollowersUser\n   * \n   * This function call connection provider `getFollowersUser` method by userId\n   * and the returning list will assign `this.followersList` variable list of followers\n   * user's.\n   */\n  getFollowersUser() {\n    this.utilsProvider.presentLoading();\n    this.connectionsProvider.getFollowersUser(this.userId).then((data: any) => {\n      this.followersList = data;\n      this.newFollowersList = this.followersList;\n      this.utilsProvider.hideLoading();\n    }).catch((err: any) => {\n      this.utilsProvider.hideLoading();\n    });\n  }\n\n  /**\n   * --------------------------------------------------------------\n   * Unfollow User\n   * --------------------------------------------------------------\n   * @method unFollow\n   * This function works to unfollow user. Open a confirmation box to ensure that the user\n   * really wants to unfollow and call a shared provider `unfollowUser` method by passing\n   * two params `this.userId` and `user.uid` here, `user.uid` is any user ID would like to\n   * unfollow and `this.userId` is current user ID.\n   * \n   */\n  unFollow(user) {\n    // Open a confirm popup box\n    this.utilsProvider.showConfirm(\n      `<img src=\"${user.image}\" width=\"80px !important;\">`,\n      `Unfollow <b>@${user.name}</b>`)\n      .then((ans) => {\n        // If User select `yes` a shared provider `unfollowUser` method will be call\n        // to make this selected user to unfollow\n        if (ans === 'yes') {\n          this.sharedProvider.unfollowUser(this.userId, user.uid).then(success => {\n            user.isFollowing = false;\n          });\n        }\n      });\n  }\n\n  /**\n   * --------------------------------------------------------------\n   * Follow User\n   * --------------------------------------------------------------\n   * @method follow\n   * This function works to follow the user and call a connection provider `followUser` method by passing\n   * two params `user.uid` and `this.userId`. here, `user.uid` is any user ID would like to\n   * follow and `this.userId` is current user ID.\n   */\n  follow(user) {\n    this.connectionsProvider.followUser(user.uid, this.userId).then(success => {\n      success.subscribe(() => {\n        user.isFollowing = true;\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  /**\n   * --------------------------------------------------------------\n   * Search\n   * --------------------------------------------------------------\n   * @param ev \n   */\n  getSearchResult(ev: any) {\n    // Reset items back to all of the items\n    this.followersList = this.newFollowersList;\n    // set val to the value of the searchbar\n    let val = ev.target.value;\n    // if the value is an empty string don't filter the items\n    if (val && val.trim() != '') {\n      this.followersList = this.followersList.filter((item) => {\n        return (item.name.toLowerCase().indexOf(val.toLowerCase()) > -1);\n      })\n    }\n  }\n\n  /**\n   * --------------------------------------------------------------\n   * Open User Public Profile\n   * --------------------------------------------------------------\n   * @method gotoUserProfile\n   * @param userId\n   */\n  gotoUserProfile(userId) {\n    let modal = this.modalCtrl.create('UserPublicProfilePage', { userId: userId });\n    modal.onDidDismiss(() => {\n      this.getFollowersUser();\n    });\n    modal.present();\n  }\n\n  /**\n   * Dismiss function\n   * This function dismiss the popup modal\n   */\n  dismiss() {\n    this.viewCtrl.dismiss();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/followers/followers.ts"],"sourceRoot":""}