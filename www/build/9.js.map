{"version":3,"sources":["../../src/pages/password-change/password-change.module.ts","../../src/validators/password-match.validator.ts","../../src/pages/password-change/password-change.ts"],"names":[],"mappings":"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","file":"9.js","sourcesContent":["/**\n * @author    Ionic Bucket <ionicbucket@gmail.com>\n * @copyright Copyright (c) 2017\n * @license   Fulcrumy\n * \n * This file represents a module of change password page\n */\nimport { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { PasswordChangePage } from './password-change';\n\n@NgModule({\n  declarations: [\n    PasswordChangePage,\n  ],\n  imports: [\n    IonicPageModule.forChild(PasswordChangePage),\n  ],\n  exports: [\n    PasswordChangePage\n  ]\n})\nexport class PasswordChangePageModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/password-change/password-change.module.ts","/**\n * @author    Ionic Bucket <ionicbucket@gmail.com>\n * @copyright Copyright (c) 2017\n * @license   Fulcrumy\n * \n * This file represents a validation of Password\n * File path - '../../../src/validators/password-match.validator'\n */\n\nimport { FormGroup } from '@angular/forms';\n\nexport class PasswordMatchValidator {\n  static matchingPasswords(passwordKey: string, passwordConfirmationKey: string) {\n    return (group: FormGroup) => {\n      let passwordInput = group.controls[passwordKey];\n      let passwordConfirmationInput = group.controls[\n        passwordConfirmationKey];\n      if (passwordInput.value !== passwordConfirmationInput.value) {\n        return passwordConfirmationInput.setErrors({ notEquivalent: true })\n      }\n    }\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/validators/password-match.validator.ts","/**\n * @author    Ionic Bucket <ionicbucket@gmail.com>\n * @copyright Copyright (c) 2017\n * @license   Fulcrumy\n * \n * This file represents a component of change user password \n * File path - '../../../src/pages/password-change/password-change'\n */\n\nimport { Component } from '@angular/core';\nimport { IonicPage, ViewController } from 'ionic-angular';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { PasswordMatchValidator } from '../../validators/password-match.validator';\nimport { UtilsProvider } from '../../providers/utils/utils';\nimport { AuthenticationProvider } from '../../providers/authentication/authentication';\n\n@IonicPage()\n@Component({\n  selector: 'page-password-change',\n  templateUrl: 'password-change.html',\n})\nexport class PasswordChangePage {\n\n  private passwordForm: any;\n\n  constructor(\n    private viewCtrl: ViewController,\n    private formBuilder: FormBuilder,\n    private utilsProvider: UtilsProvider,\n    private authProvider: AuthenticationProvider) { }\n\n  /**\n   * Do any initialization\n   */\n  ngOnInit() {\n    this.formValidation();\n  }\n\n  /***\n   * --------------------------------------------------------------\n   * Form Validation\n   * --------------------------------------------------------------\n   * @method formValidation\n   * This function build a form of password change with validation\n   * Creating three input fields in this form\n   * 1. currentPassword    - User Current password\n   * 2. newPassword        - User New Password\n   * 3. repeatPassword     - Repeat password\n   */\n  formValidation() {\n    this.passwordForm = this.formBuilder.group(\n      {\n        currentPassword: ['', Validators.compose([Validators.required])],\n        newPassword: ['', Validators.compose([Validators.minLength(6), Validators.required])],\n        repeatPassword: ['', Validators.compose([Validators.minLength(6), Validators.required])],\n      },\n      {\n        validator: PasswordMatchValidator.matchingPasswords('newPassword', 'repeatPassword')\n      }\n    );\n  }\n\n  /**\n   * --------------------------------------------------------------\n   * Update Password\n   * --------------------------------------------------------------\n   * @method updatePassword\n   * \n   * This function call a authentication provider `updatePassword` by passing two params to update\n   * user password\n   */\n  async updatePassword() {\n    try {\n      this.utilsProvider.presentLoading();\n      await this.authProvider.updatePassword(this.passwordForm.currentPassword, this.passwordForm.newPassword)\n        .then((res) => {\n          this.utilsProvider.hideLoading();\n          this.utilsProvider.basicAlert('Success', 'Your Password Change Successfully').then(() => {\n            this.viewCtrl.dismiss();\n          });\n        }, err => {\n          this.utilsProvider.hideLoading();\n          this.utilsProvider.basicAlert('Error', err.message);\n        });\n    }\n    catch (err) {\n      this.utilsProvider.hideLoading();\n      this.utilsProvider.basicAlert('Error', err);\n    }\n  }\n\n  /**\n   * --------------------------------------------------------------\n   * Dismiss\n   * --------------------------------------------------------------\n   * @method dismiss    This function dismiss the open popup modal\n   */\n  dismiss() {\n    this.viewCtrl.dismiss();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/password-change/password-change.ts"],"sourceRoot":""}