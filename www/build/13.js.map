{"version":3,"sources":["../../src/pages/settings/settings.module.ts","../../src/pages/settings/settings.ts"],"names":[],"mappings":"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","file":"13.js","sourcesContent":["/**\n * @author    Ionic Bucket <ionicbucket@gmail.com>\n * @copyright Copyright (c) 2017\n * @license   Fulcrumy\n * \n * This file represents module of settings page\n */\nimport { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { SettingsPage } from './settings';\n\n@NgModule({\n  declarations: [\n    SettingsPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(SettingsPage),\n  ],\n  exports: [\n    SettingsPage\n  ]\n})\nexport class SettingsPageModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/settings/settings.module.ts","/**\n * @author    Ionic Bucket <ionicbucket@gmail.com>\n * @copyright Copyright (c) 2017\n * @license   Fulcrumy\n * \n * This file represents a component of settings page\n * File path - '../../../src/pages/settings/settings'\n */\n\nimport { Component } from '@angular/core';\nimport { IonicPage, ViewController, ModalController } from 'ionic-angular';\nimport { AuthenticationProvider } from '../../providers/authentication/authentication';\nimport { FriendsLocationMapProvider } from '../../providers/friends-location-map/friends-location-map';\nimport { StorageProvider } from '../../providers/utils/storage';\nimport { UtilsProvider } from '../../providers/utils/utils';\nimport { SharedProvider } from '../../providers/shared/shared';\nimport { AdmobFreeProvider } from '../../providers/admob-free/admob-free';\n\n@IonicPage()\n@Component({\n  selector: 'page-settings',\n  templateUrl: 'settings.html',\n})\nexport class SettingsPage {\n  private userInfo: any;\n  userId: any; // Current user Id\n  isShareLocation: Boolean;\n\n  constructor(\n    private viewCtrl: ViewController,\n    private modalCtrl: ModalController,\n    private auth: AuthenticationProvider,\n    public locationProvider: FriendsLocationMapProvider,\n    private storageProvider: StorageProvider,\n    private utilsProvider: UtilsProvider,\n    private sharedProvider: SharedProvider,\n    private admobFree: AdmobFreeProvider) { }\n\n  /**\n   * Do any initialization\n   */\n  ngOnInit() {\n    this.loadStorageData().then(() => {\n      this.getUserInfos();\n      this.prepareBanner(); // Show banner ad\n      this.prepareInterstitial(); // Show Interstitial add\n    });\n  }\n\n  /**\n   * --------------------------------------------------------------\n   * Get Localstorage User ID\n   * --------------------------------------------------------------\n   * \n   * @method loadStorageData This function get userId from localstorage\n   */\n  async loadStorageData() {\n    await this.storageProvider.get().then((success: any) => {\n      this.userId = success.userId;\n    });\n  }\n\n  /**\n   * --------------------------------------------------------------\n   * Get User Information\n   * --------------------------------------------------------------\n   * @method getUserInfos\n   * This function get user current information from the database.\n   */\n  getUserInfos() {\n    this.sharedProvider.getUserInfoByUserId(this.userId)\n      .then((userInfo: any) => {\n        this.userInfo = userInfo;\n        this.isShareLocation = userInfo.isShareLocation; // User Location Status\n      }).catch(err => {\n        console.log(err);\n      })\n  }\n\n  /**\n   * --------------------------------------------------------------\n   * Open Edit Profile Page\n   * --------------------------------------------------------------\n   * @method gotoEditProfile\n   */\n  gotoEditProfile() {\n    // Create a modal to open edit profile page\n    this.modalCtrl.create('EditProfilePage', { userInfo: this.userInfo }).present();\n  }\n\n  /**\n   * --------------------------------------------------------------\n   * Open Email Change Page\n   * --------------------------------------------------------------\n   * @method gotoEmailChangePage\n   */\n  gotoEmailChangePage() {\n    // Create a modal to open email change page\n    this.modalCtrl.create('EmailChangePage').present();\n  }\n\n  /**\n   * --------------------------------------------------------------\n   * Open Password Change Page\n   * --------------------------------------------------------------\n   * @method gotoPasswordChangePage\n   */\n  gotoPasswordChangePage() {\n    // Create a modal to open password change page\n    this.modalCtrl.create('PasswordChangePage').present();\n  }\n\n  /**\n   * --------------------------------------------------------------\n   * Update User `Location of Share` Information\n   * --------------------------------------------------------------\n   * \n   * @method updateShareLocation\n   * \n   * This function open front of user a confirm popup box, after click 'yes' option\n   * this call a location provider method updateShareLocation() by pass user current Id and\n   * current status of `this.isShareLocation`.\n   */\n  updateShareLocation() {\n    // Make a Object of Confirm Popup Box\n    let object = {\n      title: 'Location Status',\n      message: `Are you sure? Do you want to make your location ${this.isShareLocation === true ? 'Private' : 'Public'}?`\n    }\n\n    // Open a confirm box by calling utils provider\n    this.utilsProvider.showConfirm(object.title, object.message).then((data) => {\n      if (data === 'yes') {\n        // reversed `this.isShareLocation` option value\n        this.isShareLocation = !this.isShareLocation;\n\n        // Call location provider method updateShareLocation() by passing userId and isShareLocation\n        this.locationProvider.updateShareLocation(this.userId, this.isShareLocation).then((success) => {\n          this.utilsProvider.presentToast('Your location has been changed successfully.', 3000, 'top');\n        }).catch(error => {\n          this.utilsProvider.presentToast('Sorry! Failed to change the location.', 3000, 'top');\n        });\n      }\n    }).catch(err => {\n      console.log(err);\n    })\n  }\n\n  /**\n   * --------------------------------------------------------------\n   * Prepare and show admob banner ad\n   * --------------------------------------------------------------\n   */\n  prepareBanner() {\n    this.admobFree.prepareBanner();\n  }\n\n  /**\n   * --------------------------------------------------------------\n   * Prepare and show admob Interstitial ad\n   * --------------------------------------------------------------\n   */\n  prepareInterstitial() {\n    this.admobFree.prepareInterstitial();\n  }\n\n  /**\n   * --------------------------------------------------------------\n   * Remove banner ad\n   * --------------------------------------------------------------\n   */\n  removeBanner() {\n    this.admobFree.removeBanner();\n  }\n\n  /**\n   * --------------------------------------------------------------\n   * Logout\n   * --------------------------------------------------------------\n   * \n   * @method logout \n   * \n   * By Calling `this.authProvider.logout` method It's logout the user account.\n   */\n  logout() {\n    this.viewCtrl.dismiss();\n    this.auth.logout();\n  }\n\n  /**\n   * --------------------------------------------------------------\n   * Dismiss\n   * --------------------------------------------------------------\n   * @method dismiss    This function dismiss the open popup modal\n   */\n  dismiss() {\n    this.removeBanner();\n    this.viewCtrl.dismiss();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/settings/settings.ts"],"sourceRoot":""}