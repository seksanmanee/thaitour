{"version":3,"sources":["../../src/pages/chat/chat-contacts/chat-contacts.module.ts","../../src/pages/chat/chat-contacts/chat-contacts.ts"],"names":[],"mappings":"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","file":"25.js","sourcesContent":["/**\n * @author    Ionic Bucket <ionicbucket@gmail.com>\n * @copyright Copyright (c) 2017\n * @license   Fulcrumy\n * \n * This file represents a module of Chat Contacts\n */\n\nimport { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { ChatContactsPage } from './chat-contacts';\n\n@NgModule({\n  declarations: [\n    ChatContactsPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(ChatContactsPage),\n  ],\n  exports: [\n    ChatContactsPage\n  ]\n})\nexport class ChatContactsPageModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/chat/chat-contacts/chat-contacts.module.ts","/**\n * @author    Ionic Bucket <ionicbucket@gmail.com>\n * @copyright Copyright (c) 2017\n * @license   Fulcrumy\n * \n * This file represents a component of chat contacts\n * File path - '../../../../src/pages/chat/chat-contacts/chat-contacts'\n */\n\nimport { Component } from '@angular/core';\nimport { IonicPage, ModalController } from 'ionic-angular';\nimport { FriendsProvider } from '../../../providers/friends/friends';\nimport { StorageProvider } from '../../../providers/utils/storage';\n\n@IonicPage()\n@Component({\n  selector: 'page-chat-contacts',\n  templateUrl: 'chat-contacts.html',\n})\nexport class ChatContactsPage {\n\n  friendLists: any = []; // Array of friend list\n  newFrndList: Array<any> = []; // Array of new friend list\n  currentUserId: any; // Current user Id\n\n  constructor(\n    public modalCtrl: ModalController,\n    private friendsProvider: FriendsProvider,\n    private storageProvider: StorageProvider) { }\n\n  /** Do any initialization */\n  ngOnInit() {\n    this.loadStorageData().then(() => {\n      this.getFriendList();\n    });\n  }\n\n  /**\n   * --------------------------------------------------------------\n   * Get Localstorage User Data\n   * --------------------------------------------------------------\n   * @method loadStorageData This function get userId from localstorage\n   */\n  async loadStorageData() {\n    await this.storageProvider.get().then((success: any) => {\n      this.currentUserId = success.userId;\n    });\n  }\n\n  /**\n   * --------------------------------------------------------------\n   * Get List of User Friends \n   * --------------------------------------------------------------\n   * @method getFriendsList   This function call friends provider\n   * `getFriendsList` method by current user ID and the returning list will assign\n   * in this `this.friendLists` variable.\n   */\n  async getFriendList() {\n    try {\n      await this.friendsProvider.getChatFriends(this.currentUserId).then(success => {\n        if (success) {\n          this.friendLists = success;\n          this.newFrndList = this.friendLists;\n        }\n      });\n    } catch (err) {\n      console.log(err)\n    }\n  }\n\n  /**\n   * --------------------------------------------------------------\n   * Search\n   * --------------------------------------------------------------\n   * @param ev \n   */\n  getSearchResult(ev: any) {\n    // Reset items back to all of the items\n    this.friendLists = this.newFrndList;\n    // set val to the value of the searchbar\n    let val = ev.target.value;\n    // if the value is an empty string don't filter the items\n    if (val && val.trim() != '') {\n      this.friendLists = this.friendLists.filter((item) => {\n        return (item.name.toLowerCase().indexOf(val.toLowerCase()) > -1);\n      })\n    }\n  }\n\n  /**\n   * --------------------------------------------------------------\n   * Open Chat Box\n   * --------------------------------------------------------------\n   * @param receiver      Opposite User Information\n   * @param index         Index Number List of Chat Friends\n   */\n  gotoChatBox(receiver, index) {\n    this.friendLists[index].unreadMsg = 0;\n    let modal = this.modalCtrl.create('ChatBoxPage', { receiver: receiver });\n    modal.present();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/chat/chat-contacts/chat-contacts.ts"],"sourceRoot":""}