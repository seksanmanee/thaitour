{"version":3,"sources":["../../src/pages/friends/friends.module.ts","../../src/pages/friends/friends.ts"],"names":[],"mappings":"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","file":"16.js","sourcesContent":["/**\n * @author    Ionic Bucket <ionicbucket@gmail.com>\n * @copyright Copyright (c) 2017\n * @license   Fulcrumy\n * \n * This file represents module of friend list page\n */\n\nimport { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { FriendsPage } from './friends';\n\n@NgModule({\n  declarations: [\n    FriendsPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(FriendsPage),\n  ],\n  exports: [\n    FriendsPage\n  ]\n})\nexport class FriendsPageModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/friends/friends.module.ts","/**\n * @author    Ionic Bucket <ionicbucket@gmail.com>\n * @copyright Copyright (c) 2017\n * @license   Fulcrumy\n * \n * This file represents a component of friend list page\n * File path - '../../../src/pages/friends/friends'\n */\n\nimport { Component } from '@angular/core';\nimport { IonicPage, NavParams, ViewController, ModalController } from 'ionic-angular';\nimport { UtilsProvider } from '../../providers/utils/utils';\nimport { FriendsProvider } from '../../providers/friends/friends';\n\n@IonicPage()\n@Component({\n  selector: 'page-friends',\n  templateUrl: 'friends.html',\n})\nexport class FriendsPage {\n\n  friendLists: any = []; // Array of friend list\n  newFriendLists: any = []; // Array of new friend list\n  userId: any; // User Id\n\n  constructor(\n    public navParams: NavParams,\n    private viewCtrl: ViewController,\n    private utilsProvider: UtilsProvider,\n    private friendsProvider: FriendsProvider,\n    public modalCtrl: ModalController) { }\n\n  /***\n   * --------------------------------------------------------------\n   * Lifecycle Event - ionViewDidLoad()\n   * --------------------------------------------------------------\n   * \n   * Fired when the page has loaded\n   */\n  ionViewDidLoad() {\n    this.getNavParamsData().then(() => {\n      this.getFriendsList();\n    });\n  }\n\n  /**\n   * --------------------------------------------------------------\n   * Get & Set data from navParams\n   * --------------------------------------------------------------\n   */\n  async getNavParamsData() {\n    if (this.navParams.get('userId')) {\n      this.userId = this.navParams.get('userId');\n    }\n  }\n\n  /**\n   * --------------------------------------------------------------\n   * List of Friends\n   * --------------------------------------------------------------\n   * @method getFriendsList\n   * This function call friends provider `getFriendsList` method by userId\n   * and the returning list will assign `this.friendLists` variable. \n   */\n  getFriendsList() {\n    this.utilsProvider.presentLoading();\n    this.friendsProvider.getFriendList(this.userId).then((data: any) => {\n      this.friendLists = data;\n      this.newFriendLists = this.friendLists;\n      this.utilsProvider.hideLoading();\n    }).catch((err: any) => {\n      this.utilsProvider.hideLoading();\n    });\n  }\n\n  /**\n   * --------------------------------------------------------------\n   * Search\n   * --------------------------------------------------------------\n   * @param ev \n   */\n  getSearchResult(ev: any) {\n    // Reset items back to all of the items\n    this.friendLists = this.newFriendLists;\n    // set val to the value of the searchbar\n    let val = ev.target.value;\n    // if the value is an empty string don't filter the items\n    if (val && val.trim() != '') {\n      this.friendLists = this.friendLists.filter((item) => {\n        return (item.name.toLowerCase().indexOf(val.toLowerCase()) > -1);\n      })\n    }\n  }\n\n  /**\n   * --------------------------------------------------------------\n   * Unfriend User\n   * --------------------------------------------------------------\n   * @method unFriend\n   * This function works to unfriend or remove user from user friend list. Call a friends provider\n   *  `unFriend` method by two params `this.currentUserId` and `this.user.uid`. here, `this.user.uid`\n   * is any user ID would like to unfriend and `this.currentUserId` is current user ID.\n   */\n  unfriend(user) {\n    this.utilsProvider.showConfirm(\n      `<img src=\"${user.image}\" width=\"80px !important;\">`,\n      `Unfriend <b>@${user.name}</b>`)\n      .then((ans) => {\n        if (ans === 'yes') {\n          this.friendsProvider.unFriend(this.userId, user.uid).then(success => {\n            if (success) {\n              user.isFriends = false;\n            }\n          });\n        }\n      });\n  }\n\n  /**\n   * --------------------------------------------------------------\n   * Send Friend Request\n   * --------------------------------------------------------------\n   * @method sendFriendRequest\n   * This function is used to send Friend Requests. Call a friends provider `addFriendRequest` method by\n   * two params `this.userId` and `user.uid` here, `user.uid` is any user ID would like to\n   * send friend request and `this.userId` is current user ID.\n   */\n  sendFriendRequest(user) {\n    this.friendsProvider.addFriendRequest(this.userId, user.uid)\n      .then(success => {\n        if (success) {\n          user.isFriends = true;\n        }\n      });\n  }\n\n  /**\n   * --------------------------------------------------------------\n   * Open User Public Profile\n   * --------------------------------------------------------------\n   * @method gotoUserProfile\n   * @param userId\n   */\n  gotoUserProfile(userId) {\n    this.modalCtrl.create('UserPublicProfilePage', { userId: userId }).present();\n  }\n\n  /**\n   * Dismiss function\n   * This function dismiss the popup modal\n   */\n  dismiss() {\n    this.viewCtrl.dismiss();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/friends/friends.ts"],"sourceRoot":""}