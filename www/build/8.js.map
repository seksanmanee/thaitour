{"version":3,"sources":["../../src/pages/authentication/sign-up/sign-up.module.ts","../../src/validators/email.validator.ts","../../src/validators/password-match.validator.ts","../../src/pages/authentication/sign-up/sign-up.ts"],"names":[],"mappings":"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","file":"8.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { SignUpPage } from './sign-up';\n\n@NgModule({\n  declarations: [\n    SignUpPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(SignUpPage),\n  ],\n  exports: [\n    SignUpPage\n  ]\n})\nexport class SignUpPageModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/authentication/sign-up/sign-up.module.ts","/**\n * @author    Ionic Bucket <ionicbucket@gmail.com>\n * @copyright Copyright (c) 2017\n * @license   Fulcrumy\n * \n * This file represents a validation of Email Address\n * File path - '../../../src/validators/email.validator'\n */\n\nimport { FormControl } from '@angular/forms';\n\nexport class EmailValidator {\n\n  static isValid(control: FormControl) {\n    const re = /^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/.test(control.value);\n\n    if (re) { return null; }\n    return { \"invalidEmail\": true };\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/validators/email.validator.ts","/**\n * @author    Ionic Bucket <ionicbucket@gmail.com>\n * @copyright Copyright (c) 2017\n * @license   Fulcrumy\n * \n * This file represents a validation of Password\n * File path - '../../../src/validators/password-match.validator'\n */\n\nimport { FormGroup } from '@angular/forms';\n\nexport class PasswordMatchValidator {\n  static matchingPasswords(passwordKey: string, passwordConfirmationKey: string) {\n    return (group: FormGroup) => {\n      let passwordInput = group.controls[passwordKey];\n      let passwordConfirmationInput = group.controls[\n        passwordConfirmationKey];\n      if (passwordInput.value !== passwordConfirmationInput.value) {\n        return passwordConfirmationInput.setErrors({ notEquivalent: true })\n      }\n    }\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/validators/password-match.validator.ts","/**\n * @author    Ionic Bucket <ionicbucket@gmail.com>\n * @copyright Copyright (c) 2017\n * @license   Fulcrumy\n * \n * This file represents a component of SignUp module\n * File path - '../../../../src/pages/authentication/signup/signup'\n */\n\n/** Imports Modules */\nimport { Component } from '@angular/core';\nimport { IonicPage, NavController, ModalController } from 'ionic-angular';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { User } from '../../../models/user'; // User Model\n\n// Import Validators\nimport { EmailValidator } from '../../../validators/email.validator';\nimport { PasswordMatchValidator } from '../../../validators/password-match.validator';\n\n// Import Providers\nimport { AuthenticationProvider } from '../../../providers/authentication/authentication';\nimport { UtilsProvider } from '../../../providers/utils/utils';\n\n@IonicPage()\n@Component({\n  selector: 'page-sign-up',\n  templateUrl: 'sign-up.html',\n})\nexport class SignUpPage {\n\n  private user = {} as User;\n  public error: any;\n  private signupForm: any;\n\n  constructor(private navCtrl: NavController,\n    private formBuilder: FormBuilder,\n    private auth: AuthenticationProvider,\n    private modalCtrl: ModalController,\n    private utilsProvider: UtilsProvider\n  ) { }\n\n  /**\n   * Do any initialization\n   */\n  ngOnInit() {\n    this.formValidation();\n  }\n\n  /***\n   * --------------------------------------------------------------\n   * Form Validation\n   * --------------------------------------------------------------\n   * @method   formValidation    This function build a SignUp form with validation\n   * \n   * `displayName` - Check required option\n   * `email` - Check two validation 1. Required Option 2. Verify Email Address\n   * `password` - Check two validation 1. Required Option 2. Minimum length of password\n   * `confirmPassword` - Check two validation 1. Required Option 2. Minimum length of password\n   */\n  formValidation() {\n    this.signupForm = this.formBuilder.group(\n      {\n        displayName: ['', Validators.compose([Validators.required])],\n        email: ['', Validators.compose([Validators.required, EmailValidator.isValid])],\n        password: ['', Validators.compose([Validators.minLength(6), Validators.required])],\n        confirmPassword: ['', Validators.compose([Validators.minLength(6), Validators.required])],\n      },\n      {\n        // Valiator - Match the password with confirm password\n        validator: PasswordMatchValidator.matchingPasswords('password', 'confirmPassword')\n      }\n    );\n  }\n\n  /**\n   * --------------------------------------------------------------\n   * User Signup\n   * --------------------------------------------------------------\n   * @method signup\n   * Before create a new user account a popup box will be open where user can decide\n   * whether user is willing to share their location or not.\n   * \n   * If user choose 'NO' then user location status will be false for contacts and friends\n   * and 'YES' option location status will be public for all contacts.\n   * \n   * After taking the decision a new user account will be open by calling this `createUserAccount()` function.\n   * \n   */\n  signup() {\n    try {\n      // Assign Signup form data to `user` object\n      this.user = this.signupForm;\n\n      // Open a confirm popup box to make sure that user want to share their location\n      this.utilsProvider.showConfirm('Location', 'Do you want to share location with your friends??')\n        .then((res) => {\n          // When users are reluctant to share the location\n          if (res === 'no') {\n            this.user.isShareLocation = false;\n            this.createUserAccount();\n          }\n          // When the user is willing to share the location\n          else if (res === 'yes') {\n            this.openShareLocationPage();\n          }\n        });\n    }\n    catch (err) {\n      this.utilsProvider.hideLoading();\n      this.error = err;\n    }\n  }\n\n  /**\n   * --------------------------------------------------------------\n   * Create User Account\n   * --------------------------------------------------------------\n   * @method createUserAccount\n   */\n  createUserAccount() {\n    this.utilsProvider.presentLoading();\n    this.auth.registration(this.user).subscribe(registerData => {\n      this.user = {};\n      this.utilsProvider.hideLoading();\n      this.navCtrl.setRoot('HomePage');\n    }, err => {\n      this.utilsProvider.hideLoading();\n      this.error = err;\n    });\n  }\n\n  /**\n   * --------------------------------------------------------------\n   * Open Share Location Page\n   * --------------------------------------------------------------\n   * @method openShareLocationPage\n   */\n  openShareLocationPage() {\n    const modal = this.modalCtrl.create('ShareLocationPage');\n    modal.onDidDismiss(data => {\n      if (data) {\n        this.user.location = data;\n        this.user.isShareLocation = true;\n        this.createUserAccount();\n      } else {\n        this.user.isShareLocation = false;\n        this.createUserAccount();\n      }\n    });\n    modal.present();\n  }\n\n  /**\n   * --------------------------------------------------------------\n   * Open Sign In Page\n   * --------------------------------------------------------------\n   */\n  gotoSignInPage() {\n    this.navCtrl.setRoot('SignInPage');\n  }\n\n  /**\n   * --------------------------------------------------------------\n   * Open Landing Page\n   * --------------------------------------------------------------\n   */\n  gotoLandingPage() {\n    this.navCtrl.setRoot('LeadLandingPage');\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/authentication/sign-up/sign-up.ts"],"sourceRoot":""}